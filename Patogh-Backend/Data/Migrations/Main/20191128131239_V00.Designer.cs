// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatoghBackend.Data;

namespace PatoghBackend.Data.Migrations.Main
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20191128131239_V00")]
    partial class V00
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Patogh")
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PatoghBackend.Entity.Models.Dorehami", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPhysical")
                        .HasColumnType("bit");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Dorehamies");
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.FavUserDorehami", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DorehamiId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasAlternateKey("DorehamiId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavUserDorehamies");
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.GeoLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DorehamiId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(13,10)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(13,10)");

                    b.HasKey("Id");

                    b.HasIndex("DorehamiId")
                        .IsUnique();

                    b.ToTable("GeoLocations");
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.JoinUserDorehami", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DorehamiId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasAlternateKey("DorehamiId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("JoinUserDorehamies");
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("LoginTokenExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginTokenValue")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("SessionToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.Dorehami", b =>
                {
                    b.HasOne("PatoghBackend.Entity.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.FavUserDorehami", b =>
                {
                    b.HasOne("PatoghBackend.Entity.Models.Dorehami", "Dorehami")
                        .WithMany()
                        .HasForeignKey("DorehamiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatoghBackend.Entity.Models.User", "User")
                        .WithMany("FavoriteDorehamies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.GeoLocation", b =>
                {
                    b.HasOne("PatoghBackend.Entity.Models.Dorehami", "Dorehami")
                        .WithOne("Location")
                        .HasForeignKey("PatoghBackend.Entity.Models.GeoLocation", "DorehamiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatoghBackend.Entity.Models.JoinUserDorehami", b =>
                {
                    b.HasOne("PatoghBackend.Entity.Models.Dorehami", "Dorehami")
                        .WithMany("JoinedUsers")
                        .HasForeignKey("DorehamiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PatoghBackend.Entity.Models.User", "User")
                        .WithMany("JoinedDorehamies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
